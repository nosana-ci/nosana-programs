# .nosana-ci.yml
nosana:
  description: Build and Test Nosana Contracts

global:
  image: nosana/solana:v1.0.9
  environment:
    SOLANA_URL: mainnet-beta # testnet / devnet / mainnet / your-custom-sol-rpc
    PROGRAM_ID: nosJhNRqr2bc9g1nfGDcXXTXvYUmxD4cVwy2pMWhrYM
    PROGRAM_NAME: nosana_jobs
    SQUADS_AUTHORITY_PUBKEY: BnSjXUGSyLMA2x2xAexp3BnmCvk4xnhUkeygozpYiNeD
    SQUADS_MULTISIG_PUBKEY: Hj7BpiinztTHA9vnTFdVuKRjfw7UybdRgdQEvYNquzY2
    SQUADS_PROGRAM_PUBKEY: 9VYJe4S85ue8hMoM9UUKQPREHRWWJRUPSQYGpknJ6Xe7

  # Trigger pipeline on these branches:
  trigger:
    branch:
      - main
      - nosana-ci

jobs:

  - name: build
    image: projectserum/build:v0.27.0
    commands:
      - scripts/prepare.sh
      - anchor build
    artifacts:
      - name: programs
        path: target

  - name: write buffer
    secrets:
      - SOLANA_WALLET
    commands:
      - solana program dump "${PROGRAM_ID}" /tmp/dump.so
      - REMOTE_HASH="$(sha256sum /tmp/dump.so | cut -d ' ' -f1)"
      - echo "On chain hash is ${REMOTE_HASH}"
      - LOCAL_HASH="$(sha256sum "target/deploy/${PROGRAM_NAME}.so" | cut -d ' ' -f1)"
      - echo "Compiled hash is ${LOCAL_HASH}"
      - test "${REMOTE_HASH}" == "${LOCAL_HASH}" && (echo 'Hashes already the same, deployment cancelled' && exit 0)
      - echo "${SOLANA_WALLET}" > /root/.config/solana/id.json
      - solana config set --url "${SOLANA_URL}"
      - solana address | tee /tmp/spill.txt
      - solana program write-buffer "target/deploy/${PROGRAM_NAME}.so" | tee /tmp/buffer.txt
      - solana program set-buffer-authority "$(cut -d ' ' -f2 < /tmp/buffer.txt)" --new-buffer-authority "${SQUADS_AUTHORITY_PUBKEY}"
      - |
        nosana-cli create-program-upgrade                       \
          --name        nosanaJobs                              \
          --private-key /root/.config/solana/id.json            \
          --buffer      "$(cut -d ' ' -f2 < /tmp/buffer.txt)"   \
          --spill       "$(cat /tmp/spill.txt)"                 \
          --network     "${SOLANA_URL}"                         \
          --multisig    "${SQUADS_MULTISIG_PUBKEY}"             \
          --program     "${SQUADS_PROGRAM_PUBKEY}"              \
          --authority   "${SQUADS_AUTHORITY_PUBKEY}"
    resources:
      - name: programs
        path: .
