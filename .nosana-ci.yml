# .nosana-ci.yml
nosana:
  description: Build and Test Nosana Contracts

global:
  image: nosana/solana:v1.0.6
  environment:
    SOLANA_URL: mainnet-beta # testnet / devnet / mainnet / your-custom-sol-rpc
    PROGRAM_ID: nosJhNRqr2bc9g1nfGDcXXTXvYUmxD4cVwy2pMWhrYM
    SQUADS_AUTHORITY_PUBKEY: BnSjXUGSyLMA2x2xAexp3BnmCvk4xnhUkeygozpYiNeD
    SQUADS_MULTISIG_PUBKEY: Hj7BpiinztTHA9vnTFdVuKRjfw7UybdRgdQEvYNquzY2l
    SQUADS_PROGRAM_PUBKEY: 9VYJe4S85ue8hMoM9UUKQPREHRWWJRUPSQYGpknJ6Xe7

  # Trigger pipeline on these branches:
  trigger:
    branch:
      - main
      - nosana-ci

jobs:

  - name: build
    image: projectserum/build:v0.27.0
    commands:
      - anchor build
    artifacts:
      - name: programs
        path: target

#  - name: anchor test
#    commands:
#      - solana-keygen new --no-bip39-passphrase
#      - anchor test --skip-build
#    resources:
#      - name: node_modules
#        path: ./
#      - name: anchor_target
#        path: ./

#  - name: rust lint
#    commands:
#      - cargo check --release
#      - cargo test --release
#      - cargo clippy --release
#    resources:
#      - name: anchor_target
#        path: ./

  - name: solana config
    commands:
      - solana config set --url "${SOLANA_URL}"
    artifacts:
      - name: config
        path: /root/.config

  - name: verify hash
    image: nosana/solana-verifiable-build
    commands:
     - PROGRAM_HASH="$(solana-verify get-program-hash $PROGRAM_ID)"
     - echo "${PROGRAM_HASH}"
     - EXECUTABLE_HASH="$(solana-verify get-executable-hash target/deploy/nosana_jobs.so)"
     - echo "${EXECUTABLE_HASH}"
     - test $PROGRAM_HASH != $EXECUTABLE_HASH && echo 'Hashes are different, continue deploying..' || (echo 'Hashes already the same' && exit 1)
    resources:
      - name: config
        path: /
      - name: programs
        path: .

  - name: write buffer
    secrets:
      - SOLANA_WALLET
    commands:
      - mkdir solana
      - echo $SOLANA_WALLET > solana/private-key.json
      - solana config set --keypair solana/private-key.json
      - solana address > solana/spill.txt
      - solana program write-buffer target/deploy/nosana_jobs.so | tee solana/buffer.txt
      - solana program set-buffer-authority "$(cut -d ' ' -f2 < solana/buffer.txt)" --new-buffer-authority $AUTHORITY_PUBKEY
    resources:
      - name: programs
        path: .
    artifacts:
      - name: solana
        path: .

  - name: squads deploy
    commands:
      - |
        nosana-cli create-program-upgrade                        \
          --name        upgradeTest                              \
          --private-key  solana/private-key.json                 \
          --buffer      "$(cut -d ' ' -f2 < solana/buffer.txt)"  \
          --spill       "$(cat solana/spill.txt)"                \
          --multisig    "${SQUADS_MULTISIG_PUBKEY}"              \
          --program     "${SQUADS_PROGRAM_PUBKEY}"               \
          --authority   "${SQUADS_AUTHORITY_PUBKEY}" | tee solana/squads-deploy.json
    resources:
      - name: solana
        path: .

  - name: wait for deploy
    commands:
      - |
        nosana-cli await-upgrade                                 \
          --private-key solana/private-key.json                  \
          --program     "${SQUADS_PROGRAM_PUBKEY}"               \
          --index       "$(cat solana/squads-deploy.json | tail -n 1 | jq .upgradeIndex)"
    resources:
      - name: solana
        path: .
