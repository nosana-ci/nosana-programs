# .nosana-ci.yml
nosana:
  description: Build and Test Nosana Contracts

global:
  image: nosana/solana:v1.0.9
  environment:
    SOLANA_URL: mainnet-beta # testnet / devnet / mainnet / your-custom-sol-rpc
    SOLANA_DIR: /root/.config/solana/
    PROGRAM_ID: nosJhNRqr2bc9g1nfGDcXXTXvYUmxD4cVwy2pMWhrYM
    PROGRAM_NAME: nosana_jobs
    SQUADS_AUTHORITY_PUBKEY: BnSjXUGSyLMA2x2xAexp3BnmCvk4xnhUkeygozpYiNeD
    SQUADS_MULTISIG_PUBKEY: Hj7BpiinztTHA9vnTFdVuKRjfw7UybdRgdQEvYNquzY2
    SQUADS_PROGRAM_PUBKEY: 9VYJe4S85ue8hMoM9UUKQPREHRWWJRUPSQYGpknJ6Xe7

  # Trigger pipeline on these branches:
  trigger:
    branch:
      - main
      - nosana-ci

jobs:

  - name: build
    image: projectserum/build:v0.27.0
    commands:
      - scripts/prepare.sh
      - anchor build
    artifacts:
      - name: programs
        path: target

  - name: anchor test
    image: projectserum/build:v0.27.0
    commands:
      - solana-keygen new --no-bip39-passphrase
      - npm ci
      - anchor test --skip-build || true
    resources:
      - name: programs
        path: .

#  - name: rust lint
#    commands:
#      - cargo check --release
#      - cargo test --release
#      - cargo clippy --release
#    resources:
#      - name: programs
#        path: .

  - name: verify hash
    image: nosana/solana-verifiable-build
    commands:
      - PROGRAM_HASH="$(solana-verify get-program-hash ${PROGRAM_ID})"
      - echo "${PROGRAM_HASH}"
      - EXECUTABLE_HASH="$(solana-verify get-executable-hash target/deploy/${PROGRAM_NAME}.so)"
      - echo "${EXECUTABLE_HASH}"
      - test $PROGRAM_HASH != $EXECUTABLE_HASH && echo 'Hashes are different, continue deploying..' || (echo 'Hashes already the same' && exit 1)
    resources:
      - name: programs
        path: .

  - name: write buffer
    secrets:
      - SOLANA_WALLET
    commands:
      - mkdir solana
      - echo "${SOLANA_WALLET}" > solana/private-key.json
      - solana config set --url "${SOLANA_URL}"
      - solana config set --keypair solana/private-key.json
      - solana address | tee solana/spill.txt
      - solana program write-buffer "target/deploy/${PROGRAM_NAME}.so" | tee solana/buffer.txt
      - solana program set-buffer-authority "$(cut -d ' ' -f2 < solana/buffer.txt)" --new-buffer-authority "${SQUADS_AUTHORITY_PUBKEY}"
      - |
        nosana-cli create-program-upgrade                        \
          --name        upgradeTest                              \
          --private-key solana/private-key.json                  \
          --buffer      "$(cut -d ' ' -f2 < /solana/buffer.txt)" \
          --spill       "$(cat solana/spill.txt)"                \
          --network     "${SOLANA_URL}"                          \
          --multisig    "${SQUADS_MULTISIG_PUBKEY}"              \
          --program     "${SQUADS_PROGRAM_PUBKEY}"               \
          --authority   "${SQUADS_AUTHORITY_PUBKEY}" | tee solana/squads-deploy.json
    resources:
      - name: programs
        path: .

  # - name: wait for deploy
  #   commands:
  #     - |
  #       nosana-cli await-upgrade                                 \
  #         --private-key solana/private-key.json                  \
  #         --program     "${SQUADS_PROGRAM_PUBKEY}"               \
  #         --index       "$(cat solana/squads-deploy.json | tail -n 1 | jq .upgradeIndex)"
  #   resources:
  #     - name: solana
        # path: .
